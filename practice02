# let isUru y=
  if (y mod 4) = 0 then
        not(y mod 100 = 0 && not(y mod 400 = 0))
  else false;;
;;

val isUru : int -> bool = <fun>

# isUru 2021
  ;;
- : bool = false
# isUru 2004;;
Characters 0-1:
  isUru 2004;;
  ^
Error: Illegal character (\027)
# isUru 2020
  ;;
- : bool = true
# isUru 2004
  ;;
Characters 0-1:
  isUru 2004
  ^
Error: Illegal character (\027)
# isUru 2004
  ;;
- : bool = true
# isUru 2017
  ;;
- : bool = false
# isUru 2018
  ;;
- : bool = false
# isUru 1900
  ;;
- : bool = false
# isUru 1888
  ;;
- : bool = true
#



--------------------------------------------------------------------


# let isUru y=
  if (y mod 4) = 0 then
        not(y mod 100 = 0 && not(y mod 400 = 0))
  else false;;
  ;;
val isUru : int -> bool = <fun>
# let lastDay y m =
  let arrayOfLastDay = [|31; 28; 31; 30; 31; 30; 31; 31; 30; 31; 30; 31|] in
      if (isUru y) then arrayOfLastDay.(1) <- 29;
    arrayOfLastDay.(m - 1);;
val lastDay : int -> int -> int = <fun>
# last 2018 10
  ;;
Characters 0-4:
  last 2018 10
  ^^^^
Error: Unbound value last

# lastDay 2018 10;;
- : int = 31

# lastDay 2017 9;;
- : int = 30
#




# let rec sort lst =
    match lst with
          [] -> []
      | head :: tail -> insert head (sort tail)
    and insert elt lst =
      match lst with
        [] -> [elt]
      | head :: tail -> if elt <= head then elt :: lst else head :: insert elt tail
    ;;
val sort : 'a list -> 'a list = <fun>
val insert : 'a -> 'a list -> 'a list = <fun>
# sort [6;2;5;3];;
- : int list = [2; 3; 5; 6]

# let pi = 4.0 *. atan 1.0;;
val pi : float = 3.1415926535897931
#

type 'a bst =  
  | Leaf 
  | Node of 'a bst * 'a * 'a bst

