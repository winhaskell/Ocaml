M.Hiroi's Home Page
http://www.geocities.jp/m_hiroi/
http://www.geocities.jp/m_hiroi/func/ocaml04.html
http://www.geocities.jp/m_hiroi/func/ocaml05.html

# let rec fact = function
  0 -> 1
    | n -> n * fact (n - 1);;
val fact : int -> int = <fun>
# fact 6
  ;;
- : int = 720
#


# let rec gcd a = function
  0 -> a
    | b -> gcd b (a mod b);;
val gcd : int -> int -> int = <fun>
# gcd 5 15;;
- : int = 5
# gcd 99 9;;
- : int = 9
# gcd 100 200;;
- : int = 100
#

# let rec mapcar f = function
  [] -> []
    | x :: xs -> f x :: mapcar f xs;;
val mapcar : ('a -> 'b) -> 'a list -> 'b list = <fun>
# mapcar (fun x -> x * x) [1; 2; 3; 4; 5];;
- : int list = [1; 4; 9; 16; 25]
# mapcar (fun x -> x * x) [101; 60; 39; 66; 99];;
- : int list = [10201; 3600; 1521; 4356; 9801]
#


# let rec remove_if f = function
  [] -> []
    | x :: xs -> if f x then remove_if f xs else x :: remove_if f xs;;
val remove_if : ('a -> bool) -> 'a list -> 'a list = <fun>
# remove_if (fun x -> x mod 2 = 0) [1; 2; 3; 4; 5];;
- : int list = [1; 3; 5]
# remove_if (fun x -> x = "abc") ["abc"; "dref"; "arbc"; "ghi"];;
- : string list = ["dref"; "arbc"; "ghi"]
#


# let rec insert_sort xs =
  let rec insert_element x = function
        [] -> [x]
    | (y::ys) as a -> if x < y then x::a else y::insert_element x ys
  in
        match xs with
        [] -> []
      | y::ys -> insert_element y (insert_sort ys);;
val insert_sort : 'a list -> 'a list = <fun>

# insert_sort [9; 1; 8; 2; 7; 3; 6; 4; 5];;
- : int list = [1; 2; 3; 4; 5; 6; 7; 8; 9]
#



# fun x y -> x +. y ;;
- : float -> float -> float = <fun>
# let f = fun n -> n + 1;;
val f : int -> int = <fun>
# f 2;;
- : int = 3
# let f x = x + 1;;
val f : int -> int = <fun>
# f 3;;
- : int = 4
# let f x y = x + y;;
val f : int -> int -> int = <fun>
# f 3 4;;
- : int = 7

# let x = [ 2; 8; 5; ];;
val x : int list = [2; 8; 5]
# List.length x;;
- : int = 3
# [ 2; 8; 5; ] @ [ 3; 4; ]
  ;;
- : int list = [2; 8; 5; 3; 4]
# let rec f n = if n == 1 then 1 else n * f (n-1);;
val f : int -> int = <fun>
# f 3;;
- : int = 6

