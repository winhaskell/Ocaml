https://ocaml.org/learn/tutorials/99problems.html

Sum multiples of 3 and 5

TaskSum multiples of 3 and 5
You are encouraged to solve this task according to the task description, using any language you may know.

Task
The objective is to write a function that finds the sum of all positive multiples of 3 or 5 below n.

Show output for n = 1000.
Extra credit: do this efficiently for n = 1e20 or higher. 


# let sum_mults n =
        let sum = ref 0 in
            for i = 3 to (n - 1) do
                  if (i mod 3) = 0 || (i mod 5) = 0 then
                        sum := !sum + i;
            done;
          !sum;;
          
val sum_mults : int -> int = <fun>

# print_endline (string_of_int (sum_mults 1000));;

233168

- : unit = ()
#




Write a function last : 'a list -> 'a option that returns the last element of a list. (easy)

# let rec last = function
     | [ ]    -> None
     | [x]    -> Some x
     | _ :: t -> last t;;

val last : 'a list -> 'a option = <fun>

# last [ "a" ; "b" ; "c" ; "d" ];;
- : string option = Some "d"

# last [];;
- : 'a option = None

# last ["ad"];;
- : string option = Some "ad"

# last ["ad", "!!!!!"];;
- : (string * string) option = Some ("ad", "!!!!!")

# last ["ad"; "!!!!!"];;
- : string option = Some "!!!!!"

# last ["ad"; "!!!!!"];;
- : string option = Some "!!!!!"


